import java.util.ArrayList;


/**
 * <h1>Truck</h1> Represents a Truck
 */
public class Truck extends Vehicle {

    private final double GAS_RATE = 1.66;

    /**
     * Default Constructor
     */
    //============================================================================
    public Truck() {
        super();
    }

    //============================================================================

    /**
     * Constructor
     * 
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */
    //============================================================================
    public Truck(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }
    
    //============================================================================

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */
    /**
     * Returns the profits generated by the packages currently in the Vehicle.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.66)
     * </p>
     */
    @Override
    public double getProfit() {
        double income = 0;
        for (Package currentItem: getPackages()) {
            income += currentItem.getPrice();
        }

        double costs = GAS_RATE * getDistanceTraveled();

        return (income - costs);
    }

    /**
     * Generates a String of the truck report. Truck report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     * 
     * @return Truck Report
     */
    @Override
    public String report() {
        String output = "==========Truck Report==========\n" +
                "License Plate No.: " + getLicensePlate() + "\n" +
                "Destination: " + getZipDest() + "\n" +
                "Weight Load: " + getCurrentWeight() + "/" + getMaxWeight() + "\n" +
                "Net Profit: $" + getProfit() + "\n" +
                "=====Shipping Labels=====\n";

        for (Package currentItem: getPackages()) {
            output += currentItem.shippingLabel();
        }

        return output;
    }



}